
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Character.isDigit;
import static java.lang.Character.isLetter;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author tleite
 */
public class EditUtil extends javax.swing.JFrame {

    /**
     * Creates new form EditUtil
     * @throws java.io.IOException
     */
    public EditUtil() throws IOException {
        initComponents();
         Preencheformulario();
    }
    
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        ctxCPF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ctxWORD = new javax.swing.JPasswordField();
        ctxREWORD = new javax.swing.JPasswordField();
        ctxNAME = new javax.swing.JTextField();
        ctxMAIL = new javax.swing.JTextField();
        GoOUT = new javax.swing.JButton();
        ctxADDRESS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ctxNUMBER = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ctxVALIDATE = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Reescreva password:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Password:");

        ctxWORD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctxWORDActionPerformed(evt);
            }
        });

        ctxNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctxNAMEActionPerformed(evt);
            }
        });

        GoOUT.setBackground(new java.awt.Color(255, 51, 51));
        GoOUT.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        GoOUT.setText("SAIR");
        GoOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoOUTActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("NIF:");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel7.setText("Dados para Editar");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("E-mail:");

        ctxVALIDATE.setBackground(new java.awt.Color(51, 255, 51));
        ctxVALIDATE.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ctxVALIDATE.setText("ALTERAR DADOS");
        ctxVALIDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctxVALIDATEActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Morada:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Número telefônico:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(251, 251, 251))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GoOUT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 326, Short.MAX_VALUE)
                        .addComponent(ctxVALIDATE)
                        .addGap(66, 66, 66))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ctxCPF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctxNUMBER, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(99, 99, 99)
                            .addComponent(ctxADDRESS, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ctxWORD, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ctxREWORD, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ctxNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(39, 39, 39)
                            .addComponent(ctxMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel7)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctxNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctxMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctxADDRESS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctxNUMBER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctxCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctxWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctxREWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GoOUT)
                    .addComponent(ctxVALIDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void mensagemErro(String erro){
            JOptionPane.showMessageDialog(null, erro, "Erro Validação", JOptionPane.ERROR_MESSAGE);
        }
    private void ctxWORDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctxWORDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctxWORDActionPerformed

    private void ctxNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctxNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctxNAMEActionPerformed

    private void GoOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoOUTActionPerformed
        Login log = new Login();
        try {
            this.finalize();
        } catch (Throwable ex) {

        }
        log.setVisible(true);
    }//GEN-LAST:event_GoOUTActionPerformed

    private void ctxVALIDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctxVALIDATEActionPerformed
        String nome = ctxNAME.getText();
        String email = ctxMAIL.getText();
        String morada = ctxADDRESS.getText();
        String telefone = ctxCPF.getText();
        String NIF = ctxNUMBER.getText();
        String password = ctxWORD.getText();
        String REpass = ctxREWORD.getText();
        System.out.println("Password"+password);
        System.out.println("REpass"+REpass);
        /*mensagemErro("teste");*/
        //email tem de ter 1 @ e 1. após o @
        //morada tem de ter>5 caracteres
        //telefone 9 caracteres que sejam digito
        //nif 9 caracteres que sejam digito
        //pass e rePass tem de ser iguais
        //pass 8 ou + caracteres, 1ou+ minusculas
        //1 ou+ algarismos, 1 ou+ maiusculas,
        //1 ou+ caracteres especiais
        if(email.equals("") || nome.equals("") || morada.equals("") ||
            telefone.equals("") || NIF.equals("") || REpass.equals("") || password.equals("")){
            mensagemErro("Preencha todos os campos!");
        }else{
            if (!ValidaCampoNome(nome)){
                mensagemErro("O campo nome tem " + " de ter 2 caracteres alfabéticos");
            }
            if (!ValidaCampoEmail(email)){
                mensagemErro("O campo e-mail tem que conter @.");
            }
            if (!ValidaCampoNumerico(telefone)){
                mensagemErro("O campo telefone tem de conter 9 digítos numéricos");
            }
            if (!ValidaCampoNumerico(NIF)){
                mensagemErro("O campo NIF tem de conter 9 digítos numéricos");
            }
            if (!ValidaCampoMorada(morada)){
                mensagemErro("O campo morada tem de conter mais 5 caracteres");
            }
            if (!ValidaCampoPassword(password)){
                mensagemErro("O campo password tem de conter 8 caracteres");
            }
            if (!password.equals(REpass)){
                mensagemErro("As passawords não coincidem");
            }
            //»»»»»»»»»»»»»»»»»»»»»»LOGIN«««««««««««««««««««««««««««««
            {

                File ficheiro = new File (nome+".txt");
                if(!ficheiro.exists()){
                    try{
                        ficheiro.createNewFile();
                        FileWriter fw = new FileWriter(ficheiro);
                        BufferedWriter bw = new BufferedWriter (fw);
                        bw.write(password);
                        bw.newLine();
                        bw.write(REpass);
                        bw.newLine();
                        bw.write(nome);
                        bw.newLine();
                        bw.write(email);
                        bw.newLine();
                        bw.write(morada);
                        bw.newLine();
                        bw.write(NIF);
                        bw.newLine();
                        bw.write(telefone);
                        bw.newLine();
                        bw.close();
                        fw.close();
                    } catch (IOException ex){
                        ex.printStackTrace();
                    }

                }

            }

        }
    }//GEN-LAST:event_ctxVALIDATEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditUtil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditUtil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditUtil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditUtil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditUtil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GoOUT;
    private javax.swing.JTextField ctxADDRESS;
    private javax.swing.JTextField ctxCPF;
    private javax.swing.JTextField ctxMAIL;
    private javax.swing.JTextField ctxNAME;
    private javax.swing.JTextField ctxNUMBER;
    private javax.swing.JPasswordField ctxREWORD;
    private javax.swing.JButton ctxVALIDATE;
    private javax.swing.JPasswordField ctxWORD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
private boolean ValidaCampoNumerico(String valor) {
        int x, contador=0, t=valor.length();
        char c;
        if(t!=9)
            return false;
        else{
            for(x=0;x<t;x++){
                c = valor.charAt(x);
                if(isDigit(c))
                    contador++;
            }
            if(t!=contador)
                return false;
        }
        return true;    
    }

    private boolean ValidaCampoNome(String nome) {
        int x, contador = 0, t= nome.length();
        char c;
        if (t <2)
            return false;
        else{
            for (x = 0; x<t; x++){
                c = nome.charAt(x);
                if (isLetter(c))
                    contador++;
            }
            if (t!=contador)
                return false;
        }
        return true;
    }

    private boolean ValidaCampoMorada(String morada) {
        int x, contador = 0, t = morada.length();
        char k;
        if (t<5)
            return false;
        else{
            for (x = 0; x<t; x++){
                k = morada.charAt(x);
                if (isLetter(k))
                    contador++;
            }
            if (t!=contador)
                return false;
        }
        return true;
    }

   private boolean ValidaCampoPassword(String password) {
       int x = 0, p = password.length();
        int mai = 0;
        int min = 0;
        int num = 0;
        int sc = 0;
        if (p < 8)
            return false;
        for (x = 0; x < p; x++){
            char c = password.charAt(x);
            if (c == ' ')
                return false;
            if (Character.isDigit(c)){
                num++;
            }
            if (Character.isUpperCase(c)){
                mai++;
            }
            if (Character.isLowerCase(c)){
                min++;
            }
            if (!isDigit(c) && !isLetter(c))
                sc++;
    
         }
    if (min > 0 && mai> 0 && sc > 0 && num > 0)
        return true;
    else
         return false;
    }

    private boolean ValidaCampoEmail(String email) {
        int c = 0 ,  e = email.length();
        if (email.indexOf("@") >= 1 ) {
        if (email.indexOf(".") >= email.indexOf("@")+2)
        return true;    
       if ((email.indexOf("@")+email.indexOf(".") - email.length()) >= 1 )
         System.out.print("Email aprovado" + (email.length() - (email.indexOf("@")+email.indexOf("."))));
       }
        return false;
    }

    private void Preencheformulario() throws FileNotFoundException, IOException {
        int cont = 0;
        String [] lista = new String[7];
        FileReader fr = new FileReader(Login.login+".txt");
        BufferedReader br = new BufferedReader (fr);
        
        while(br.ready()){
            lista[cont] = br.readLine();
                    cont++;
                            
        ctxWORD.setText(lista[0]);
        ctxREWORD.setText(lista[1]);
        ctxNAME.setText(lista[2]);
        ctxMAIL.setText(lista[3]);
        ctxADDRESS.setText(lista[4]); 
        ctxNUMBER.setText(lista[5]);
        ctxCPF.setText(lista[6]);                    
        }                
              
    }
}
